/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package final_panels;

import hmss_project.admin;
import hmss_project.medicine;
import hmss_project.message;
import hmss_project.order;
import hmss_project.vendor;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hassan
 */
public class ListRecievedMessages extends javax.swing.JPanel {
admin ad = new admin();
    /**
     * Creates new form ListEmployee
     */
    
    public ListRecievedMessages() throws SQLException {
        initComponents();
        addRowsTojTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(242, 242, 242));

        listTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        listTable.setForeground(new java.awt.Color(36, 49, 60));
        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "order status", "order id", "vendor name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listTable.setGridColor(new java.awt.Color(26, 177, 136));
        listTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1218, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTableMouseClicked
        
        try {
            order ord = ad.searchOrderByID(this.tkOrdID());
            listRecievedMessageDetails2 LRMD = new listRecievedMessageDetails2(ord);
            LRMD.addRW();
            LRMD.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(ListRecievedMessages.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_listTableMouseClicked

    public int tkOrdID(){
    
    DefaultTableModel model = (DefaultTableModel) listTable.getModel();
    int selcRow = listTable.getSelectedRow();
    return Integer.parseInt(model.getValueAt( selcRow , 2).toString());
}
    
    public void addRowsTojTable() throws SQLException
    {
        int y=0;
        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        Object rowData[] = new Object[4];
        admin a = new admin();
        ArrayList<message> m = a.ListMessages2();
        
        for(message msg : m)
        {
            rowData[0] = msg.getMessageID();
            rowData[1] = msg.isOrderStatus();
            rowData[2] = msg.getOrderID();
            rowData[3] = a.toVName(msg.getVendorID());

            model.addRow(rowData);
        }
    }

    public void deleteTable()
        {
            DefaultTableModel dm = (DefaultTableModel) listTable.getModel();
            int rowCount = dm.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
        }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listTable;
    // End of variables declaration//GEN-END:variables

  

}

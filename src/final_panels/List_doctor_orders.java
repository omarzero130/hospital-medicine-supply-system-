/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package final_panels;
import GUI.adminDashboard;
import hmss_project.admin;
import hmss_project.doctoroder;
import hmss_project.medicine;
import hmss_project.order;
import hmss_project.orderDetails;
import hmss_project.vendor;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hassan
 */

public class List_doctor_orders extends javax.swing.JPanel {

    /**
     * Creates new form ListEmployee
     * @throws java.sql.SQLException
     */
   
   
    //orderDetails od = new orderDetails();
    List_docotr_OrderDetails aa; 
    
    int k=0;

    
    public List_doctor_orders() throws SQLException {
        initComponents();
        addRowsToTable();
                
     
    }


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(242, 242, 242));

        listTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        listTable.setForeground(new java.awt.Color(36, 49, 60));
        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ld", "date", "DoctorName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listTable.setGridColor(new java.awt.Color(26, 177, 136));
        listTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(listTable);
        if (listTable.getColumnModel().getColumnCount() > 0) {
            listTable.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 411, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTableMouseClicked
        try {
           aa = new List_docotr_OrderDetails();
            k=this.tkOrdID();
            
            //aa.addRW(k);
            
            aa.setVisible(true);
            aa.addRW(k);
            // this.setVisible(true);
            // aa.setVisible(true);
            
            /*  p3.setVisible(false);
            p2.setVisible(false);
            p1.setVisible(false);*/
        } catch (SQLException ex) {
            Logger.getLogger(List_doctor_orders.class.getName()).log(Level.SEVERE, null, ex);
        }
     
  
   
    }//GEN-LAST:event_listTableMouseClicked

    private void listTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTableMousePressed
        // TODO add your handling code here:
    
    
    
    }//GEN-LAST:event_listTableMousePressed
 public int tkOrdID(){
    DefaultTableModel model = (DefaultTableModel) listTable.getModel();
    int selcRow = listTable.getSelectedRow();
    doctoroder x = new doctoroder();
      
      
    
    x.setId(Integer.parseInt(model.getValueAt( selcRow , 0).toString()));
    k=x.getId();
      return k;
  
 }
admin a = new admin();
    public void addRowsToTable() throws SQLException
    {
        DefaultTableModel model = (DefaultTableModel) listTable.getModel();
        Object rowData[] = new Object[3];
        
        
        ArrayList<doctoroder> orders = a.List_doctor_Orders();
        
        
        for(doctoroder m : orders)
        {
            rowData[0] = m.getId();
            rowData[1] = m.getTime();
            rowData[2] = m.getDoctorname();
         
            
            model.addRow(rowData);
        }
       
       
    }

    
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listTable;
    // End of variables declaration//GEN-END:variables

  
    public void ListEmployee() throws SQLException {
        addRowsToTable();
    }
}
